{"ast":null,"code":"var _jsxFileName = \"/home/ivo/Code/frontend-class/final-hw/simple-social-ui/src/components/posts.jsx\",\n  _s = $RefreshSig$();\nimport './posts.css';\nimport { useState, useEffect } from 'react';\nimport Post from './post';\nimport { Auth } from './auth';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Posts(_ref) {\n  _s();\n  let {\n    loginUser,\n    setLoginUser\n  } = _ref;\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    fetch(\"http://127.0.0.1:3000/posts\", {\n      credentials: \"include\"\n    }).then(response => response.json()).then(posts => {\n      if (posts) {\n        setPosts(posts);\n      }\n    });\n  }, [loginUser]);\n  const logout = async () => {\n    await fetch(\"http://127.0.0.1:3000/logout\", {\n      method: \"POST\",\n      credentials: \"include\"\n    });\n    setLoginUser(null);\n  };\n  const createPost = async event => {\n    event.preventDefault();\n    const content = event.target.content.value.trim();\n    if (!content) {\n      return;\n    }\n    const response = await fetch(\"http://127.0.0.1:3000/posts\", {\n      method: \"POST\",\n      headers: {\n        \"Accept\": \"application/json\",\n        \"Content-Type\": \"application/json\"\n      },\n      credentials: \"include\",\n      body: JSON.stringify({\n        content\n      })\n    });\n    if (response.ok) {\n      const post = await response.json();\n      setPosts([...posts, {\n        ...post,\n        likes: 0,\n        userName: loginUser\n      }]);\n    }\n    event.target.reset();\n    // setExpanded(false)\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: logout,\n        children: \"Logout\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: createPost,\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          className: \"create-post-fieldset\",\n          children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n            className: \"create-post-legend\",\n            children: \"New Post\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"post-author\",\n            children: loginUser\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            className: \"create-post-content\",\n            name: \"content\",\n            cols: \"40\",\n            rows: \"20\",\n            placeholder: \"Write here...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"create-post-buttons\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn\",\n              type: \"reset\",\n              children: \"Clear\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn | create-post-submit\",\n              children: \"Post\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: loginUser !== null ? posts.map(post => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          user: loginUser,\n          post: post,\n          posts: posts,\n          setPosts: setPosts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 68\n        }, this);\n      }) : () => {}\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["useState","useEffect","Post","Auth","jsxDEV","_jsxDEV","Posts","_ref","_s","loginUser","setLoginUser","posts","setPosts","fetch","credentials","then","response","json","logout","method","createPost","event","preventDefault","content","target","value","trim","headers","body","JSON","stringify","ok","post","likes","userName","reset","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","className","name","cols","rows","placeholder","type","map","user","_c","$RefreshReg$"],"sources":["/home/ivo/Code/frontend-class/final-hw/simple-social-ui/src/components/posts.jsx"],"sourcesContent":["import './posts.css'\nimport { useState, useEffect } from 'react'\nimport Post from './post'\nimport { Auth } from './auth'\n\nexport function Posts ({ loginUser, setLoginUser }) {\n    const [posts, setPosts] = useState([])\n\n    useEffect(() => {\n        fetch(\"http://127.0.0.1:3000/posts\", { credentials: \"include\" })\n            .then((response) => response.json())\n            .then(posts => {\n                if (posts) {\n                    setPosts(posts)\n                }\n            })\n    }, [loginUser])\n\n    const logout = async () => {\n        await fetch(\"http://127.0.0.1:3000/logout\", {\n            method: \"POST\",\n            credentials: \"include\"\n        })\n        setLoginUser(null)\n    }\n\n    const createPost = async (event) => {\n        event.preventDefault()\n\n        const content = event.target.content.value.trim()\n        if (!content) {\n            return\n        }\n\n        const response = await fetch(\"http://127.0.0.1:3000/posts\", {\n            method: \"POST\",\n            headers: {\n                \"Accept\": \"application/json\",\n                \"Content-Type\": \"application/json\"\n            },\n            credentials: \"include\",\n            body: JSON.stringify({ content })\n        })\n\n        if (response.ok) {\n            const post = await response.json()\n            setPosts([...posts, { ...post, likes: 0, userName: loginUser }])\n        }\n\n        event.target.reset()\n        // setExpanded(false)\n    }\n\n\n    return (\n        <div>\n            <header>\n                <button onClick={logout}>Logout</button>\n            </header> \n            \n\n            <main>\n                <form onSubmit={createPost}>\n                    <fieldset className=\"create-post-fieldset\">\n                        <legend className=\"create-post-legend\">New Post</legend>\n                        <p className=\"post-author\">{loginUser}</p>\n                        <textarea className=\"create-post-content\" name=\"content\" cols=\"40\" rows=\"20\" placeholder=\"Write here...\"></textarea>\n                        <div className=\"create-post-buttons\">\n                            <button className=\"btn\" type=\"reset\">Clear</button>\n                            <button className=\"btn | create-post-submit\">Post</button>\n                        </div>\n                    </fieldset>\n                </form>\n            </main>\n\n            <div>\n                {\n                    loginUser !== null ? posts.map(post => {return <Post user={loginUser} post={post} posts={posts} setPosts={setPosts} />}) : () => {}\n                }\n            </div>\n        </div>\n    ) \n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}